
@startuml

package "Benchmark blackbox" {
  TestInput <|.. LFG : implements
  TestInput <|.. TPTPFiles : implements
  TestCase --o TestSuite
  Benchmark o-- Config
  Config o-- TestSuite
  Config o-- TestInput
  TestSuite *-- Parser
  Parser -- Statistics
  Statistics o-- SATStatistics
  TPTPStream -- SATStatistics
  Prover9Parser ..|> Parser : implements
  SPASSParser ..|> Parser : implements
  TestInput *-- TPTPStream

  Main *-- Config
  Main *-- Benchmark

  Enum SATType {
  FOF
  CNF
  TFF
  TCF
  }

  Enum ParserToExecutable {
  SPASSParser="spass"
  Prover9Parser="prover9"
  }
}

class Main {
- Config config
- Benchmark benchmark
+ void main()
}

abstract class TestInput <<interface>> {
+ TPTPStream getTestCase()
}

class TPTPFiles {
- string[] paths
+ TPTPFiles(string[] paths)
+ TPTPStream getTestCase()
}

class LFG {
TODO
+ TPTPStream getTestCase()
}

class TPTPStream <<extends stream>>{
- SATStatistics stats
+ getStream()
+ SATStatistics getSATStatistics()
}


class Statistics <<serializable>> {
- int memory_usage
- int cpu_time
- int execution_time
- SATStatistics sat
}

class SATStatistics <<serializable>> {
- int number_of_clauses
- int number_of_atoms
- int maximal_clause_size
- int number_of_predicates
- int number_of_functors
- int number_of_variables
- int maximal_term_depth
- SATType SAT_type

}

abstract class Parser <<interface>> {
+ Statistics parseOutput(stream output)
+ Parser findParser(string executable, ParserToExecutable translation_table)
}

class Prover9Parser {
+ Statistics parseOutput(stream output)
}

class SPASSParser {
+ Statistics parseOutput(stream output)
}

class TestCase {
+ string name
+ string[] options

+ Statistics run(string executable, string aditional_opotions, stream input,
  Parser parser)
}

class TestSuite {
- string executable
- string PATH
- bool stdin
- string in_option
- string options
- Parser parser
- TestCase[] test_cases
+ TestSuite(string PATH, TestCase[] test_cases)
+ Statistics[] run();
}

class Config {
- string config_file_path
- TestInput[] test_inputs
- TestSuite test_suite
- int iterations?
- string log_file
- string outpu_dir
- bool override_output

- verifyConfig()
+ Config(string config_file_path)
+ void readConfigFile()

}

class Benchmark {
- Config config
+ Benchmark(Config config)
+ Statistics[] run()
}

@enduml

